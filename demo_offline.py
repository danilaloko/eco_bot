#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π
–∏ –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –≠–∫–æ-–±–æ—Ç–µ
"""
import json
from datetime import datetime
from database import Database

def demo_offline_messages():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏"""
    print("üß™ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π\n")
    
    db = Database()
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_id = 123456789
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db.add_user(user_id, "testuser", "–¢–µ—Å—Ç", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤
    offline_messages = [
        {
            'type': 'text',
            'data': {
                'text': '–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞ —Å –∑–∞–¥–∞–Ω–∏—è–º–∏?',
                'date': datetime.now().isoformat()
            }
        },
        {
            'type': 'photo',
            'data': {
                'caption': '–ú–æ–π —ç–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç!',
                'file_id': 'AgACAgIAAxkBAAIBY2...',
                'date': datetime.now().isoformat()
            }
        },
        {
            'type': 'text',
            'data': {
                'text': 'üìä –ú–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç',
                'date': datetime.now().isoformat()
            }
        }
    ]
    
    print("üì¨ –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏—è...")
    for msg in offline_messages:
        db.save_offline_message(
            user_id,
            json.dumps(msg['data'], ensure_ascii=False),
            msg['type']
        )
        print(f"   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {msg['type']}: {msg['data'].get('text', msg['data'].get('caption', '—Ñ–∞–π–ª'))}")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏—è
    print(f"\nüì• –ü–æ–ª—É—á–∞–µ–º –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
    messages = db.get_offline_messages(user_id)
    
    for msg_id, message_data, message_type, received_date in messages:
        try:
            data = json.loads(message_data)
            content = data.get('text', data.get('caption', '—Ñ–∞–π–ª'))
            print(f"   üì® ID {msg_id}: [{message_type}] {content}")
        except json.JSONDecodeError:
            print(f"   üì® ID {msg_id}: [{message_type}] {message_data}")
    
    # –ü–æ–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ
    print(f"\n‚úÖ –ü–æ–º–µ—á–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ...")
    for msg_id, _, _, _ in messages:
        db.mark_offline_message_processed(msg_id)
        print(f"   ‚úì –°–æ–æ–±—â–µ–Ω–∏–µ {msg_id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ–ª—å—à–µ –Ω–µ—Ç
    remaining = db.get_offline_messages(user_id)
    print(f"\nüì≠ –û—Å—Ç–∞–≤—à–∏—Ö—Å—è –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π: {len(remaining)}")

def demo_user_states():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç —Ä–∞–±–æ—Ç—É —Å —Å–æ—Å—Ç–æ—è–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    print("\nüß™ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π\n")
    
    db = Database()
    
    user_id = 987654321
    
    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db.add_user(user_id, "stateuser", "–°–æ—Å—Ç–æ—è–Ω–∏–µ", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    
    print("üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
    context_data = {
        'last_name': '–ò–≤–∞–Ω–æ–≤',
        'first_name': '–ò–≤–∞–Ω',
        'participation_type': 'family'
    }
    
    db.save_user_state(user_id, 4, context_data)  # FAMILY_MEMBERS_COUNT = 4
    print(f"   ‚úì –°–æ—Å—Ç–æ—è–Ω–∏–µ: 4 (–≤–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å–µ–º—å–∏)")
    print(f"   ‚úì –ö–æ–Ω—Ç–µ–∫—Å—Ç: {context_data}")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print(f"\nüì• –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}:")
    state, restored_context = db.get_user_state(user_id)
    
    print(f"   üìä –°–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
    print(f"   üìù –ö–æ–Ω—Ç–µ–∫—Å—Ç: {restored_context}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print(f"\nüîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
    restored_context['family_members_count'] = 3
    db.save_user_state(user_id, 5, restored_context)  # CHILDREN_INFO = 5
    
    state, final_context = db.get_user_state(user_id)
    print(f"   üìä –ù–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
    print(f"   üìù –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {final_context}")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    print(f"\nüßπ –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ...")
    db.clear_user_state(user_id)
    
    state, cleared_context = db.get_user_state(user_id)
    print(f"   üìä –û—á–∏—â–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
    print(f"   üìù –û—á–∏—â–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç: {cleared_context}")

def demo_error_recovery():
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ—Å–ª–µ –æ—à–∏–±–æ–∫"""
    print("\nüß™ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ—Å–ª–µ –æ—à–∏–±–æ–∫\n")
    
    db = Database()
    
    user_id = 555666777
    db.add_user(user_id, "erroruser", "–û—à–∏–±–∫–∞", "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")
    
    print("üí• –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è...")
    
    # –°–∏–º—É–ª–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    error_data = {
        'text': '–°–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–∑–≤–∞–ª–æ –æ—à–∏–±–∫—É',
        'error': 'TimeoutError: Connection timed out',
        'date': datetime.now().isoformat()
    }
    
    db.save_offline_message(
        user_id,
        json.dumps(error_data, ensure_ascii=False),
        'text_error'
    )
    
    print(f"   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π: {error_data['text']}")
    print(f"   ‚ö†Ô∏è –û—à–∏–±–∫–∞: {error_data['error']}")
    
    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ—à–∏–±–∫–∏
    print(f"\nüîß –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è...")
    error_messages = db.get_offline_messages(user_id)
    
    for msg_id, message_data, message_type, received_date in error_messages:
        try:
            data = json.loads(message_data)
            print(f"   üì® –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {data.get('text', '—Ñ–∞–π–ª')}")
            if 'error' in data:
                print(f"   üîç –ë—ã–ª–∞ –æ—à–∏–±–∫–∞: {data['error']}")
            
            # –ü–æ–º–µ—á–∞–µ–º –∫–∞–∫ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–µ
            db.mark_offline_message_processed(msg_id)
            print(f"   ‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ {msg_id} —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
            
        except json.JSONDecodeError as e:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è {msg_id}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"""
    print("ü§ñ –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π –≠–∫–æ-–±–æ—Ç–∞")
    print("=" * 60)
    
    try:
        demo_offline_messages()
        demo_user_states()
        demo_error_recovery()
        
        print("\nüéâ –í—Å–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("\nüìã –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã:")
        print("  ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ñ–ª–∞–π–Ω —Å–æ–æ–±—â–µ–Ω–∏–π")
        print("  ‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
        print("  ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –¥–∞–Ω–Ω—ã—Ö")
        print("  ‚úÖ –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ —Å –º–µ—Å—Ç–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è")
        
        print("\nüöÄ –¢–µ–ø–µ—Ä—å –±–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —Å –ø–æ–ª–Ω–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π –æ—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º–∞!")
        
    except Exception as e:
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
        import traceback
        traceback.print_exc()

if __name__ == '__main__':
    main() 